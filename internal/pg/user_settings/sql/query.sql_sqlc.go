// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package sql

import (
	"context"
)

const insertEvent = `-- name: InsertEvent :one
INSERT INTO outbox_queue (
    key, schema_id, message
) VALUES (
             $1, $2, $3
         ) returning id
`

type InsertEventParams struct {
	Key      []byte `db:"key"`
	SchemaID int16  `db:"schema_id"`
	Message  []byte `db:"message"`
}

func (q *Queries) InsertEvent(ctx context.Context, db DBTX, arg *InsertEventParams) (int64, error) {
	row := db.QueryRow(ctx, insertEvent, arg.Key, arg.SchemaID, arg.Message)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const updateMessage = `-- name: UpdateMessage :exec
UPDATE outbox_queue
SET message = $1
WHERE id = $2
`

type UpdateMessageParams struct {
	Message []byte `db:"message"`
	ID      int64  `db:"id"`
}

func (q *Queries) UpdateMessage(ctx context.Context, db DBTX, arg *UpdateMessageParams) error {
	_, err := db.Exec(ctx, updateMessage, arg.Message, arg.ID)
	return err
}
